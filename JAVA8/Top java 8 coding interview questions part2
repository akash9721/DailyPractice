package com.java8.Features;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class EmployeeApp {

	public static void main(String[] args) {

		List<Employee> emp = Arrays.asList(new Employee(28, "John", 50000, "HR", "Male", 2014),
				new Employee(26, "Roma", 51000, "Tech", "Female", 2015),
				new Employee(31, "Mathew", 60000, "HR", "Male", 2017),
				new Employee(29, "John", 89000, "Ops", "Male", 2014),
				new Employee(24, "Linda", 3000, "HR", "Female", 2016),
				new Employee(26, "Michel", 95000, "Tech", "Male", 2013),
				new Employee(37, "Ram", 48000, "Tech", "Male", 2014),
				new Employee(29, "Agnes", 73000, "Ops", "Female", 2017),
				new Employee(30, "Jessica", 65000, "Ops", "Female", 2013),
				new Employee(31, "Julie", 56000, "Ops", "Female", 2017),
				new Employee(21, "xiaodong", 50600, "Ops", "Male", 2019),
				new Employee(32, "Liping", 50300, "Tech", "Female", 2013),
				new Employee(23, "Garry", 40000, "Tech", "Male", 2014),
				new Employee(40, "Harry", 170708, "Tech", "Female", 2017));

		System.out.println("\n1. Average of male and female employee");
		Map<String, Double> avgMaleandFemaleemp = emp.stream()
				.collect(Collectors.groupingBy(Employee::getGender, Collectors.averagingInt(Employee::getSalary)));
		System.out.println(avgMaleandFemaleemp);

		System.out.println("\n2. Who has the most working experience in the companmy");
		String mostExperienceEmp = emp.stream().sorted((a, b) -> a.getYearOfjoining() - b.getYearOfjoining())
				.findFirst().get().getName();
		System.out.println(mostExperienceEmp);

		System.out.println("\n3. Details of youngest female employee from HR department");
		String youngestFemaleEmp = emp.stream()
				.filter(x -> x.getGender().equals("Female") && x.getDepartment().equals("HR"))
				.sorted((a, b) -> a.getAge() - b.getAge()).findFirst().get().getName();
		System.out.println(youngestFemaleEmp);

		System.out.println("\n4. Find employee who has 3rd highest salary");
		String thirdHighestSalEmpName = emp.stream().sorted((a, b) -> b.getSalary() - a.getSalary())
				.map(Employee::getName).skip(2).findFirst().get();
		System.out.println(thirdHighestSalEmpName);

		System.out.println("\n5. Sort employee details based on salary");
		emp.stream().sorted((a, b) -> a.getSalary() - b.getSalary()).forEach(System.out::println);
	}
}


+++++++++++++++++++++++++++++++++++++++++++  output  ++++++++++++++++++++++++++++++++++++++++++++++

1. Average of male and female employee
{Female=67001.14285714286, Male=61800.0}

2. Who has the most working experience in the companmy
Michel

3. Details of youngest female employee from HR department
Linda

4. Find employee who has 3rd highest salary
John

5. Sort employee details based on salary
Employee [age=24, name=Linda, salary=3000, department=HR, gender=Female, yearOfjoining=2016]
Employee [age=23, name=Garry, salary=40000, department=Tech, gender=Male, yearOfjoining=2014]
Employee [age=37, name=Ram, salary=48000, department=Tech, gender=Male, yearOfjoining=2014]
Employee [age=28, name=John, salary=50000, department=HR, gender=Male, yearOfjoining=2014]
Employee [age=32, name=Liping, salary=50300, department=Tech, gender=Female, yearOfjoining=2013]
Employee [age=21, name=xiaodong, salary=50600, department=Ops, gender=Male, yearOfjoining=2019]
Employee [age=26, name=Roma, salary=51000, department=Tech, gender=Female, yearOfjoining=2015]
Employee [age=31, name=Julie, salary=56000, department=Ops, gender=Female, yearOfjoining=2017]
Employee [age=31, name=Mathew, salary=60000, department=HR, gender=Male, yearOfjoining=2017]
Employee [age=30, name=Jessica, salary=65000, department=Ops, gender=Female, yearOfjoining=2013]
Employee [age=29, name=Agnes, salary=73000, department=Ops, gender=Female, yearOfjoining=2017]
Employee [age=29, name=John, salary=89000, department=Ops, gender=Male, yearOfjoining=2014]
Employee [age=26, name=Michel, salary=95000, department=Tech, gender=Male, yearOfjoining=2013]
Employee [age=40, name=Harry, salary=170708, department=Tech, gender=Female, yearOfjoining=2017]
