package com.java.java8;

import java.util.Arrays;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class ArrayListQuestions {
   public static void main(String[] args) {
	List<Integer> list=Arrays.asList(1,7,8,9,5,2,36,4,78,222,24,9);
	
	//1. print the duplicate number
	Set<Integer> set=new HashSet<>();
	list.stream().filter(s->!set.add(s)).forEach(s->System.out.print(s+" "));
	System.out.println();
	
	//2. print the maximum and minimum value
	Integer maxi = list.stream().max((x1,x2)->x1-x2).get();
	System.out.println(maxi);
	Integer mini = list.stream().min((x1,x2)->x1-x2).get();
	System.out.println(mini);
	
	//3. sort then ASC and DESC order and print them
	list.stream().sorted().forEach(s->System.out.print(s+" "));
	System.out.println();
	list.stream().sorted(Comparator.reverseOrder()).forEach(s->System.out.print(s+" "));
	System.out.println();
	
	//4. return the first 5 element and their sum
	Integer limitsum = list.stream().limit(5).reduce(0,(e1,e2)->e1+e2);
	System.out.println(limitsum);
	
	//5. skip first 5 elements and return the sum of remaining number
	int sum2 = list.stream().skip(5).mapToInt(x->x).sum();
	System.out.println(sum2);
	
	//6. return the cube of each number
	list.stream().map(x->x*x*x).forEach(s->System.out.print(s+" "));
    }
}
