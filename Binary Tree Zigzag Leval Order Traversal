/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> v;
        if(root==NULL)
        return {};
        stack<int> st;
        queue<TreeNode*> q;
        bool flag=false;
        q.push(root);
        while(q.empty()==false){
            vector<int> temp;
            int n=q.size();
            for(int i=0;i<n;i++){
                TreeNode*curr=q.front();
                q.pop();
                if(flag){
                    st.push(curr->val);
                }
                else
                temp.push_back(curr->val);
                if(curr->left)
                q.push(curr->left);
                if(curr->right)
                q.push(curr->right);
            }
            while(!st.empty()){
               temp.push_back(st.top());
               st.pop();
            }
            flag=!flag;
            v.push_back(temp);
        }
        return v;
    }
};
