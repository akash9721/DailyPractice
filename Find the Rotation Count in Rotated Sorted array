// Find the Rotation Count in Rotated Sorted array
//time o(nlogn)
//space o(1)
#include <iostream>
using namespace std;
int countRotations(int a[],int n){
    int start=0;
    int end=n-1;
    while(start<=end){
        int mid=(start+end)/2;
        if(mid<end and a[mid]>a[mid+1])
          return mid+1;
        else if(mid>start and a[mid]<a[mid-1])
         return mid;
        else if(a[mid]>a[start])
         start=mid+1;
        else
         end=mid-1;
    }
    return 0;
}
int main() {
    int arr[] = {11,12,15,18,2,5,6,8};
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << countRotations(arr, n);
    return 0;
}
