package com.java.dsa;

import java.util.PriorityQueue;

public class NthLargestElement {

	private static void find3HighestI(int[] a) {
		int first=Integer.MIN_VALUE;
		int second=Integer.MIN_VALUE;
		int third=Integer.MIN_VALUE;
		for(int i=0;i<a.length;i++) {
			if(a[i]>first) {
				third=second;
				second=first;
				first=a[i];
			}
			else if(a[i]>second && a[i]<first) {
				third=second;
				second=a[i];
			}
			else if(a[i]>third && a[i]<second) {
				third=a[i];
			}
		}
		System.out.println("First highest no: "+first);
		System.out.println("Second highest no: "+second);
		System.out.println("Third highest no: "+third);
	}
	
	private static void find3HighestII(int[] a,int k) {
		//by default it is min priority queue
		PriorityQueue<Integer> pQueue=new PriorityQueue<>();
		for(int i=0;i<a.length;i++) {
			pQueue.add(a[i]);
			if(pQueue.size()>k) {
				pQueue.remove();
			}
		}
		System.out.println("Third highest no is: "+pQueue.peek());
	}

	public static void main(String[] args) {
		int a[] = { 6, 3, 13, 23, 9, 20 };
		find3HighestI(a);
		System.out.println();
		find3HighestII(a,3);
	}


}
