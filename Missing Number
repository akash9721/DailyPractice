class Solution {
public:
    int missingNumber(vector<int>& nums) {
        // int n=nums.size();
        // sort(nums.begin(),nums.end());
        // for(int i=0;i<nums.size();i++)  //o(nlogn)
        // {                               //o(1)
        //     if(nums[i]!=i)
        //         return i;
        // }
        // return nums.size();
        
        // unordered_set<int> us;
        // for(int i=0;i<nums.size();i++)     //o(n)
        // {                                  //o(n)
        //     us.insert(nums[i]);
        // }
        // for(int i=0;i<nums.size();i++)     
        // {                                  
        //     if(us.find(i)==us.end())
        //         return i;
        // }
        // return nums.size();
        
        // int res=0;
        // int i;
        // int n=nums.size();
        // for(i=0;i<n;i++)
        // {
        //     res=res^i^nums[i];  //o(n)
        // }                       //o(1)
        // return res^i;

        int i=0;
        while(i<nums.size()){
            if(nums[i]<nums.size() and nums[i]!=nums[nums[i]]){
                swap(nums[i],nums[nums[i]]);
            }
            else{
                i++;
            }
        }
        for(int j=0;j<nums.size();j++){
            if(nums[j]!=j)
              return j;
        }
        return nums.size();

    }
};
