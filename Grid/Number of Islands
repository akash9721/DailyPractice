
Input: grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]
Output: 3


class Solution {
public:
    void function(vector<vector<char>>& grid,int i,int j){
	     
		 //edge cases
        if(i<0 || j<0 || i>=grid.size() || j>=grid[0].size() || grid[i][j]=='0')
          return;
		  
		 //mark as 0 so that we can not visit it again
        grid[i][j]='0';
        
		//check in all the adjacent element
        function(grid,i+1,j);
        function(grid,i-1,j);
        function(grid,i,j+1);
        function(grid,i,j-1);    
    }
    int numIslands(vector<vector<char>>& grid) {
        int cnt=0;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]=='1'){
                    cnt++;
                    function(grid,i,j);
                    
                }
            }
        }
        return cnt;
    }
};
